{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1046{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\b\f0\fs40\lang22 Lista de exerc\'edcios em java poo \par
\par

\pard\sa200\sl276\slmult1\b0\fs24 FEITO -> Crie uma classe "Ret\'e2ngulo" com atributos para largura e altura. Crie m\'e9todos para calcular e retornar a \'e1rea e a circunfer\'eancia do ret\'e2ngulo.\par
FEITO -> Crie uma classe "Animal" com atributos para nome, idade e tipo de animal. Crie um m\'e9todo que exiba esses atributos.\par
FEITO -> Crie uma classe "Pessoa" com atributos para nome, idade, endere\'e7o e contato. Crie um m\'e9todo que exiba esses atributos.\par
FEITO -> Crie uma classe "Empregado" com atributos como nome, n\'famero de empregado e sal\'e1rio. Crie um m\'e9todo para mostrar esses atributos e um m\'e9todo para aumentar o sal\'e1rio em uma porcentagem.\par
Crie uma classe chamada "Pessoa" que possui os atributos "nome" e "endereco". Crie uma classe chamada "Endereco" que possui os atributos "rua", "cidade" e "estado". A classe "Pessoa" deve ter uma inst\'e2ncia de "Endereco" como um de seus atributos.\par
Encapsulamento: Crie uma classe "ContaCorrente" com atributos privados como n\'famero da conta, saldo, limite de cr\'e9dito e juros. Adicione m\'e9todos p\'fablicos para depositar, sacar e transferir dinheiro, verificando se o saldo e o limite de cr\'e9dito permitem a transa\'e7\'e3o antes de prosseguir e calculando juros se necess\'e1rio.\par
Heran\'e7a: Crie uma superclasse "Ve\'edculo" com atributos como n\'famero de rodas, cor e velocidade m\'e1xima. Em seguida, crie subclasses "Carro", "Moto" e "Caminh\'e3o" que herdam de Ve\'edculo e adicionam atributos espec\'edficos, como n\'famero de portas (Carro) ou capacidade de carga (Caminh\'e3o). Crie m\'e9todos nas subclasses para acelerar e frear, usando a velocidade m\'e1xima da superclasse como limite.\par
Polimorfismo: Crie uma classe "Empresa" que tem uma lista de objetos "Funcionario", e adicione objetos de diferentes subclasses como "Gerente" e "Vendedor" a essa lista. Em seguida, crie um m\'e9todo na classe Empresa que percorra a lista e chame o m\'e9todo "calcularSalario()" em cada objeto, sem saber qual \'e9 o tipo espec\'edfico do objeto.\par
Crie uma classe chamada "Empresa" que possui os atributos "nome" e "funcionarios". Crie uma classe chamada "Funcionario" que possui os atributos "nome", "idade" e "salario". A classe "Empresa" deve ter uma lista de inst\'e2ncias de "Funcionario" como um de seus atributos.\par
Encapsulamento: Crie uma classe "ContaBancaria" com atributos privados como n\'famero da conta, saldo e limite de saque. Adicione m\'e9todos p\'fablicos para depositar e sacar dinheiro, verificando se o saldo e o limite de saque permitem a transa\'e7\'e3o antes de prosseguir.\par
Heran\'e7a: Crie uma superclasse "Produto" com atributos como nome, pre\'e7o e estoque. Em seguida, crie subclasses "ProdutoPerecivel" e "ProdutoNaoPerecivel" que herdam de Produto e adicionam atributos espec\'edficos, como data de validade (ProdutoPerecivel) ou peso (ProdutoNaoPerecivel). Adicione m\'e9todos nas subclasses para verificar se o produto est\'e1 vencido ou se o peso \'e9 v\'e1lido.\par
Polimorfismo: Crie uma classe "Funcionario" com um m\'e9todo abstrato "calcularSalarioBruto". Em seguida, crie subclasses "Gerente" e "Vendedor" que herdam de Funcionario e implementam o m\'e9todo "calcularSalarioBruto" de maneira diferente, incluindo comiss\'e3o (Vendedor) ou b\'f4nus (Gerente). Em seguida, crie uma lista de funcion\'e1rios e adicione objetos das subclasses a ela. Percorra a lista chamando o m\'e9todo "calcularSalarioBruto" em cada objeto, sem saber qual \'e9 o tipo espec\'edfico do objeto.\par
Estrutura de dados: Crie uma classe "CarrinhoDeCompras" que implementa uma lista de produtos adicionados pelo usu\'e1rio. A classe deve ter m\'e9todos para adicionar e remover produtos, al\'e9m de m\'e9todos para calcular o valor total da compra e verificar se o estoque dos produtos \'e9 suficiente para a compra.\par
Crie uma classe chamada "Funcion\'e1rio" que possui os atributos "nome", "matr\'edcula" e "sal\'e1rio". Crie uma classe chamada "Departamento" que possui os atributos "nome" e uma lista de inst\'e2ncias de "Funcion\'e1rio" como um de seus atributos. Forne\'e7a m\'e9todos na classe "Departamento" para adicionar e remover funcion\'e1rios, bem como exibir o sal\'e1rio total do departamento.\par
Crie uma classe chamada "Produto" que possui os atributos "nome" e "pre\'e7o". Crie uma classe chamada "CarrinhoDeCompras" que possui uma lista de inst\'e2ncias de "Produto" como um de seus atributos. Forne\'e7a m\'e9todos na classe "CarrinhoDeCompras" para adicionar e remover produtos, bem como calcular o valor total do carrinho de compras.\par
Crie uma classe chamada "Pessoa" que possui os atributos "nome" e "endere\'e7o". Crie uma classe chamada "Endere\'e7o" que possui os atributos "rua", "cidade" e "estado". A classe "Pessoa" deve ter uma inst\'e2ncia de "Endere\'e7o" como um de seus atributos. Forne\'e7a m\'e9todo na classe "Pessoa" para exibir o endere\'e7o completo.\par
Crie uma classe chamada "Ve\'edculo" que possui os atributos "marca" e "modelo". Crie uma classe chamada "Pneu" que possui o atributo "marca". A classe "Ve\'edculo" deve ter uma lista de inst\'e2ncias de "Pneu" como um de seus atributos. Forne\'e7a m\'e9todo na classe "Ve\'edculo" para exibir as marcas de pneus do ve\'edculo.\par
Crie uma classe chamada "Carro" que possui os atributos "marca" e "modelo". Crie uma classe chamada "Motor" que possui o atributo "potencia". A classe "Carro" deve ter uma inst\'e2ncia de "Motor" como um de seus atributos.\par
PARCIAL -> exer10,  Crie uma classe "Agenda" com atributos para armazenar contatos, como nome, telefone e endere\'e7o de e-mail. Crie m\'e9todos para adicionar, remover e pesquisar contatos.\par
Encapsulamento: Crie uma classe "Pessoa" com atributos privados como nome, idade, endere\'e7o e telefone. Adicione m\'e9todos p\'fablicos para obter e definir esses atributos, e tamb\'e9m um m\'e9todo para imprimir as informa\'e7\'f5es da pessoa.\par
Heran\'e7a: Crie uma classe "Animal" com atributos como nome, idade e peso. Em seguida, crie subclasses "Gato" e "Cachorro" que herdam de Animals e adicionam atributos espec\'edficos, como ra\'e7a (Cachorro) ou cor do pelo (Gato). Adicione m\'e9todos nas subclasses para fazer os animais emitirem seus respectivos sons.\par
Polimorfismo: Crie uma classe "Empleado" com um m\'e9todo abstrato "calcularSalario". Em seguida, crie subclasses "EmpleadoTemporario" e "EmpleadoPermanente" que herdam de Empleado e implementam o m\'e9todo "calcularSalario" de maneira diferente. Em seguida, crie uma lista de empleados e adicione objetos das subclasses a ela. Percorra a lista chamando o m\'e9todo "calcularSalario" em cada objeto, sem saber qual \'e9 o tipo espec\'edfico do objeto.\par
Estrutura de dados: Crie uma classe "Fila" que implementa uma fila usando uma lista encadeada. A classe deve ter m\'e9todos para adicionar e remover elementos da fila, al\'e9m de m\'e9todos para verificar se a fila est\'e1 vazia ou cheia.\par
Estrutura de dados: Crie uma classe "Pilha" que implementa uma pilha usando um array. A classe deve ter m\'e9todos para adicionar e remover elementos da pilha, al\'e9m de m\'e9todos para verificar se a pilha est\'e1 vazia ou cheia.\par
Crie uma classe "Sistema de gerenciamento de estoque" com classes para itens, fornecedores e pedidos. Implemente m\'e9todos para adicionar, remover e pesquisar itens, fornecedores e pedidos, e para calcular o custo total do estoque e o lucro obtido com a venda dos itens.\par
Crie uma classe "Sistema de gerenciamento de recursos humanos" com classes para funcion\'e1rios, departamentos e cargas. Implemente m\'e9todos para adicionar, remover e pesquisar funcion\'e1rios, departamentos e cargas, e para calcular a folha de pagamento e as horas trabalhadas.\par
Crie uma classe "Sistema de gerenciamento de seguran\'e7a" com classes para c\'e2meras, alarmes e funcion\'e1rios. Implemente m\'e9todos para adicionar, remover e pesquisar c\'e2meras, alarmes e funcion\'e1rios, e para verificar o status da seguran\'e7a em tempo real.\par
Crie uma classe "Sistema de Gerenciamento de Biblioteca" com classes para livros, revistas, CDs e DVDs. Implemente m\'e9todos para empr\'e9stimo, devolu\'e7\'e3o e verifica\'e7\'e3o de disponibilidade.\par
Crie uma classe "Sistema de Gerenciamento de Contato" com classes para armazenar informa\'e7\'f5es de contato, como nome, telefone, e-mail e endere\'e7o. Implemente m\'e9todos para adicionar, remover e pesquisar contatos.\par
Crie uma aula "Sistema de Gerenciamento de Vendas" com aulas para clientes, funcion\'e1rios e produtos. Implemente m\'e9todos para adicionar, remover e pesquisar clientes e funcion\'e1rios, e para realizar vendas.\par
Crie uma classe "Sistema de gerenciamento de rede" com classes para computadores, dispositivos e usu\'e1rios. Implemente m\'e9todos para adicionar, remover e pesquisar computadores, dispositivos e usu\'e1rios, e para monitorar o uso da banda e o uso de recursos.\par
Crie uma classe "Sistema de gerenciamento de vendas" com aulas para clientes, funcion\'e1rios e produtos. Implemente m\'e9todos para adicionar, remover e pesquisar clientes, funcion\'e1rios e produtos, e para calcular o volume de vendas e o lucro obtido\par
Crie uma aula "Sistema de Gerenciamento de Estoque" com aulas para diferentes tipos de produtos, como eletr\'f4nicos, roupas e alimentos. Implemente m\'e9todos para adicionar e remover itens do estoque, e para exibir o total do estoque.\par
Crie uma classe "Sistema de Gerenciamento de Contas Banc\'e1rias" com classes para contas correntes e contas poupan\'e7a. Implemente m\'e9todos para depositar, retirar e transferir dinheiro entre contas.\par
Crie uma aula "Sistema de Gerenciamento de Viagens" com aulas para reservas de passagens a\'e9reas, hot\'e9is e aluguel de carros. Implemente m\'e9todos para reservar, cancelar e verificar reservas.\par
FEITO -> Crie uma classe "Circle" (C\'edrculo) com um atributo para o raio e m\'e9todos para calcular a \'e1rea e o comprimento do c\'edrculo.\par
FEITO ->  Crie uma classe "Aluno" com atributos para nome, matr\'edcula e notas em diferentes disciplinas. Crie m\'e9todos para calcular a m\'e9dia final e verifique se o aluno foi aprovado.\par
Crie uma classe "Banco" com atributos para nome, endere\'e7o e lista de contas banc\'e1rias. Crie m\'e9todos para adicionar e remover contas e mostrar o saldo total do banco.\par
FEITO -> Crie uma classe "Autom\'f3vel" com atributos como marca, modelo, ano e quilometragem. Crie m\'e9todos para mostrar os atributos e para calcular o tempo gasto com manuten\'e7\'e3o.\par
FEITO -> Crie uma classe "Empregado" com atributos para nome, endere\'e7o, sal\'e1rio, carga e departamento. Crie m\'e9todos para mostrar os atributos e para calcular o tempo de servi\'e7o.\par
Crie uma classe "Sistema de gerenciamento de estoque" com classes para diferentes tipos de produtos, como eletr\'f4nicos, roupas e alimentos. Implemente m\'e9todos para adicionar e remover itens do estoque, e para exibir o total do estoque.\par
Crie uma classe "Sistema de gerenciamento de vendas" com aulas para clientes, funcion\'e1rios e produtos. Implemente m\'e9todos para adicionar, remover e pesquisar clientes e funcion\'e1rios, e para realizar vendas.\par
Crie uma classe "Sistema de gerenciamento de contas" com classes para contas correntes, poupan\'e7as e investimentos. Implemente m\'e9todos para depositar, retirar e transferir dinheiro entre contas.\par
FEITO -> Crie uma classe "Sistema de gerenciamento de reservas" com classes para reservas de passagens a\'e9reas, hot\'e9is e aluguel de carros. Implemente m\'e9todos para reservar, cancelar e verificar reservas.\par
Crie uma classe "Rel\'f3gio" com atributos para horas, minutos e segundos. Crie m\'e9todos para obter a hora atual e para definir uma hora espec\'edfica.\par
FEITO -> sCrie uma classe "Alimento" com atributos para nome, ingredientes e modo de preparo. Crie um m\'e9todo que exiba esses atributos.\par
FEITO -> Crie uma classe "Funcion\'e1rio" com atributos para nome, matr\'edcula e sal\'e1rio. Crie um m\'e9todo para calcular o sal\'e1rio anual do funcion\'e1rio.\par
FEITO -> Crie uma classe chamada "Veiculo" com atributos para marca, modelo, ano e proprietario (do tipo Pessoa). Adicione m\'e9todos de acesso e modifica\'e7\'e3o para esses atributos.\par
FEITO -> Crie uma classe chamada "Animal" com atributos para nome e idade. Adicione um construtor que inicialize esses atributos e m\'e9todos de acesso para eles.\par
Crie uma classe chamada "Mamifero" que herda de Animal e adiciona um atributo para a cor do pelo. Adicione um construtor que inicialize esse atributo e tamb\'e9m os atributos herdados da classe Animal.\par
Crie uma classe chamada "Cachorro" que herda de Mamifero e adiciona um atributo para ra\'e7a. Adicione um construtor que inicialize esse atributo e tamb\'e9m os atributos herdados das classes Mamifero e Animal.\par
Crie uma classe chamada "Empresa" que possui uma lista de funcion\'e1rios (do tipo Pessoa) e um m\'e9todo para adicionar um funcion\'e1rio \'e0 lista.\par
Crie uma classe chamada "Departamento" que possui uma lista de funcion\'e1rios (do tipo Pessoa) e um atributo para o nome do departamento. Adicione um m\'e9todo para adicionar um funcion\'e1rio \'e0 lista de funcion\'e1rios do departamento.\par
Crie uma classe chamada "Universidade" que possui uma lista de professores (do tipo Pessoa) e uma lista de alunos (tamb\'e9m do tipo Pessoa). Adicione m\'e9todos para adicionar professores e alunos \'e0s suas respectivas listas.\par
Crie uma classe chamada "Livro" com atributos para o t\'edtulo, autor (do tipo Pessoa) e editora. Adicione m\'e9todos de acesso e modifica\'e7\'e3o para esses atributos.\par
Crie uma classe chamada "Venda" que possui uma lista de itens (do tipo ItemVenda) e um atributo para o valor total da venda. Adicione um m\'e9todo para adicionar itens \'e0 lista de itens da venda e outro m\'e9todo para calcular o valor total da venda.\par
Crie uma classe chamada "SistemaDeCompras" que possui uma lista de compras (do tipo Compra) e um m\'e9todo para adicionar uma compra \'e0 lista.\par
FEITO -> Crie uma classe "Animal" com atributos como nome, idade e tipo de animal. Implemente m\'e9todos para alimentar e brincar com o animal.\par
Crie uma classe "Banco" com atributos para nome, endere\'e7o e lista de contas banc\'e1rias. Crie m\'e9todos para adicionar e remover contas e mostrar o saldo total do banco.\par
FEITO -> Crie uma classe "Ve\'edculo" com atributos para marca, modelo, ano, quilometragem e velocidade m\'e1xima. Implemente m\'e9todos para acelerar e frear o ve\'edculo.\par
Crie uma classe "Sistema de gerenciamento de transporte" com classes para diferentes tipos de ve\'edculos, como \'f4nibus, metr\'f4 e trem. Implemente m\'e9todos para adicionar, remover e pesquisar ve\'edculos, e para calcular o tempo de viagem entre as esta\'e7\'f5es.\par
Crie uma classe "Sistema de gerenciamento de estoque" que gerencie estoque de v\'e1rios tipos de produtos, como alimentos, roupas e eletr\'f4nicos. A classe deve incluir atributos para o nome do produto, pre\'e7o, quantidade e data de validade. Ela deve incluir m\'e9todos para adicionar novos produtos, atualizar o estoque, calcular o valor total do estoque e gerar relat\'f3rio de estoque.\par
FEITO -> Crie uma classe chamada "ContaBancaria" com atributos para o nome do titular, o n\'famero da conta e o saldo. Adicione m\'e9todos para depositar e retirar dinheiro, mas garanta que o saldo nunca fique negativo.\par
FEITO -> Crie uma classe chamada "Pessoa" com atributos para nome, idade e endere\'e7o. Adicione m\'e9todos de acesso e modifica\'e7\'e3o para esses atributos, mas garanta que a idade seja sempre maior que 0 e menor que 150.\par
FEITO -> Crie uma classe chamada "Produto" com atributos para nome, pre\'e7o e quantidade em estoque. Adicione m\'e9todos para adicionar e remover itens do estoque, mas garanta que a quantidade em estoque nunca seja negativa\par
Crie uma classe "Sistema de gerenciamento de biblioteca" que gerencie livros, revistas, CDs e DVDs. Ela deve incluir atributos para o t\'edtulo, autor, ano de lan\'e7amento e estado de concess\'e3o. Ela deve incluir m\'e9todos para adicionar novos itens, atualizar o estado de empr\'e9stimo, pesquisar itens e gerar relat\'f3rio de empr\'e9stimos.\par
Crie uma classe "Sistema de gerenciamento de empresa" que gerencia funcion\'e1rios, projetos e clientes. Ela deve incluir atributos para o nome, carga, sal\'e1rio, data de assinatura e projetos atribu\'eddos. Ela deve incluir m\'e9todos para adicionar novos funcion\'e1rios, atribuir projetos, calcular o custo total dos projetos e gerar relat\'f3rio de desempenho.\par
Crie uma classe "Sistema de gerenciamento de projetos" com classes para equipes, tarefas e recursos. Implemente m\'e9todos para adicionar, remover e pesquisar equipes, tarefas e recursos, e para calcular o progresso do projeto.\par
Crie uma classe "Sistema de gerenciamento de frotas" com classes para ve\'edculos, motoristas e rotas. Implemente m\'e9todos para adicionar, remover e pesquisar ve\'edculos, motoristas e rotas, e para calcular o custo de manuten\'e7\'e3o da frota.\par
Crie uma classe "Tri\'e2ngulo" com atributos para base e altura. Crie m\'e9todos para calcular e retornar a \'e1rea e a circunfer\'eancia do tri\'e2ngulo.\par
FEITO -> Crie uma classe "Eletrodom\'e9stico" com atributos para marca, modelo, consumo de energia e estado (on/off). Crie m\'e9todos para ligar e desligar o eletrodom\'e9stico.\par
Crie uma classe "Sistema de gerenciamento de aeroporto" com classes para avi\'f5es, funcion\'e1rios e passageiros. Implemente m\'e9todos para adicionar, remover e proteger avi\'f5es, funcion\'e1rios e passageiros, e para calcular o fluxo de pessoas no aeroporto.\par
Crie uma classe "Sistema de gerenciamento de im\'f3veis" com classes para im\'f3veis, inquilinos e propriet\'e1rios. Implemente m\'e9todos para adicionar, remover e pesquisar im\'f3veis, inquilinos e propriet\'e1rios, e para calcular o aluguel e os impostos devidos.\par
Crie uma classe "Sistema de gerenciamento de transporte" com classes para \'f4nibus, metr\'f4 e trem. Implemente m\'e9todos para adicionar, remover e pesquisar ve\'edculos, e para calcular o tempo de viagem entre esta\'e7\'f5es, fluxo de passageiros e rendimento.\par
Crie uma classe "Sistema de gerenciamento de log\'edstica" com classes para transportadoras, motoristas, caminh\'f5es, cargas e rotas. Implemente m\'e9todos para adicionar, remover e pesquisar transportadoras, motoristas, caminh\'f5es, cargas e rotas, e para calcular o custo e o tempo de entrega.\par
Crie uma classe chamada "FiguraGeometrica" com um m\'e9todo abstrato chamado "calcularArea". Crie classes concretas chamadas "Retangulo" e "Triangulo" que herdam de FiguraGeometrica e implementam o m\'e9todo "calcularArea" de acordo com as suas respectivas formulas.\par
Crie uma classe chamada "Funcionario" com um m\'e9todo abstrato chamado "calcularSalario". Crie classes concretas chamadas "Gerente" e "Vendedor" que herdam de Funcionario e implementam o m\'e9todo "calcularSalario" de acordo com as suas respectivas regras de neg\'f3cio.\par
Crie uma classe chamada "Veiculo" com um m\'e9todo abstrato chamado "mover". Crie classes concretas chamadas "Carro" e "Avi\'e3o" que herdam de Veiculo e implementam o m\'e9todo "mover" de acordo com as suas respectivas formas de se movim\par
Crie uma classe "Sistema de gerenciamento de bolsa de valores" com classes para a\'e7\'f5es, \'edndices e investidores. Implemente m\'e9todos para adicionar, remover e pesquisar a\'e7\'f5es, \'edndices e investidores, e para calcular o valor das a\'e7\'f5es e o rendimento dos investidores.\par
Crie uma classe "Agenda de compromissos" com atributos para data, hora e descri\'e7\'e3o do compromisso. Crie m\'e9todos para adicionar, remover e pesquisar compromissos.\par
Crie uma classe "Pessoa" com atributos para nome, idade, endere\'e7o e contato. Crie m\'e9todos para mostrar os atributos e para calcular o tempo de resid\'eancia.\par
FEITO -> Crie uma classe "Conta" com atributos para saldo e n\'famero da conta. Crie m\'e9todos para depositar, retirar e verificar o saldo na conta.\par
FEITO -> Crie uma classe "Produto" com atributos para nome, descri\'e7\'e3o, pre\'e7o e estoque. Crie m\'e9todos para adicionar e remover itens do estoque, e para exibir o pre\'e7o total do estoque.\par
Crie uma classe "Sistema de gerenciamento de restaurante" com classes para pedidos, clientes, gar\'e7ons e cozinheiros. Implemente m\'e9todos para adicionar, remover e pesquisar clientes, gar\'e7ons e cozinheiros e para realizar pedidos e cobran\'e7as.\par
Crie uma classe "Sistema de gerenciamento de escola" com classes para professores, alunos, disciplinas e turmas. Implemente m\'e9todos para adicionar, remover e pesquisar professores, alunos, disciplinas e turmas, e para calcular m\'e9dia das notas dos alunos.\par
FEITO -> Crie uma classe "Celular" com atributos para marca, modelo e capacidade de armazenamento. Crie m\'e9todos para verificar se h\'e1 espa\'e7o dispon\'edvel e para adicionar aplicativos ao celular.\par
Crie uma classe "Agenda de contatos" com atributos para nome, telefone e endere\'e7o de e-mail. Crie m\'e9todos para adicionar, remover e pesquisar contatos.\par
Crie uma classe "Sistema de gerenciamento de vendas" com aulas para clientes, funcion\'e1rios e produtos. Implemente m\'e9todos para adicionar, remover e pesquisar clientes e funcion\'e1rios e para realizar vendas.\par
Crie uma classe "Sistema de gerenciamento de seguros" com classes para diferentes tipos de seguros, como sa\'fade, autom\'f3vel e im\'f3vel. Implemente m\'e9todos para adicionar, remover e pesquisar seguros e para calcular o pr\'eamio.\par
Crie uma classe "Sistema de gerenciamento de contas banc\'e1rias" com classes para contas correntes, poupan\'e7as e investimentos. Implemente m\'e9todos para depositar, retirar e transferir dinheiro entre contas e para calcular juros.\par
Crie uma classe "Sistema de gerenciamento de viagens" com classes para reservas de passagens a\'e9reas, hot\'e9is e aluguel de carros. Implemente m\'e9todos para reservar, cancelar e verificar reservas e para calcular o custo da viagem.\par
Crie uma classe "Carro" com atributos para marca, modelo, ano e velocidade m\'e1xima. Crie m\'e9todos para aumentar e diminuir a velocidade do carro.\par
Crie uma classe "Agenda telef\'f4nica" com atributos para nome, telefone e endere\'e7o. Crie m\'e9todos para adicionar, remover e pesquisar contatos.\par
Crie uma classe "Cliente" com atributos para nome, endere\'e7o, telefone e hist\'f3rico de compras. Crie m\'e9todos para calcular o valor total gasto pelo cliente e para verificar se ele \'e9 um cliente frequente.\par
Crie uma classe "Produto" com atributos para nome, descri\'e7\'e3o, pre\'e7o e quantidade em estoque. Crie m\'e9todos para adicionar e remover itens do estoque e para calcular o lucro obtido com a venda do produto.\par
Crie uma classe "Sistema de gerenciamento de im\'f3veis" com classes para im\'f3veis para aluguel, venda e temporada. Implemente m\'e9todos para adicionar, remover e pesquisar im\'f3veis e para calcular o valor do aluguel ou venda.\par
Crie uma classe "Sistema de gerenciamento de seguros" com classes para diferentes tipos de seguros, como sa\'fade, autom\'f3vel e im\'f3vel. Implemente m\'e9todos para adicionar, remover e pesquisar seguros, calcular pr\'eamios e emitir ap\'f3lices.\par
Crie uma classe "Sistema de gerenciamento de investimentos" com classes para a\'e7\'f5es, t\'edtulos e fundos. Implemente m\'e9todos para comprar, vender e verificar o valor atual dos investimentos.\par
Crie uma classe "Sistema de gerenciamento de viagens" com classes para reservas de passagens a\'e9reas, hot\'e9is e aluguel de carros. Implemente m\'e9todos para reservar, cancelar e verificar reservas, calcular o custo da viagem e emitir vouchers de viagem.\par
\par
}
 